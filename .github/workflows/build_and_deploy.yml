name: Build and publish
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_and_build:
    name: Performs linting, formatting on the application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn --legacy-peer-deps
      
      - name: Setup env
        run: |
          cp .env.sample .env.local
          
      - name: Run linting check
        run: yarn run lint:check

      - name: Check formatting
        run: yarn run format:check

      - name: Build
        run: yarn run build

  publish:
    # needs: lint_and_build
    name: Publish docker image to dockerhub
    runs-on: ubuntu-latest
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      OWNER: ${{ secrets.DOCKER_OWNER }}
      PATH_NAME: ${{ secrets.DOCKER_NAME }}
      PASS: ${{ secrets.DOCKER_PASS }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to dockerhub
        run:  echo $PASS | docker login -u $LOGIN --password-stdin

      - name: Build image
        run: docker build -t $OWNER/$PATH_NAME:${GITHUB_REF_NAME} -f Dockerfile .

      - name: Push image to dockerhub
        run: docker push $OWNER/$PATH_NAME:${GITHUB_REF_NAME}


  deploy:
    needs: publish
    name: Deploy docker image
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      WORKDIR: ${{ secrets.WORKDIR }}
    steps:
      - name: Set ssh key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          cat >>~/.ssh/config <<END
          Host starknet
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy.key
            StrictHostKeyChecking no
          END
      - name: Run deploy script
        run: ssh starknet "cd $WORKDIR && docker-compose down && docker-compose pull && docker-compose up -d && exit"
      - name: Remove old version
        run: ssh starknet "docker container prune && docker image prune"
