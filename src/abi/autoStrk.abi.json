[
  {
    "name": "ExternalImpl",
    "type": "impl",
    "interface_name": "strkfarm::interfaces::ERC4626Strategy::IStrategy"
  },
  {
    "name": "strkfarm::interfaces::IEkuboDistributor::Claim",
    "type": "struct",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u64"
      },
      {
        "name": "claimee",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "amount",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "core::array::Span::<core::felt252>",
    "type": "struct",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "core::integer::u256",
    "type": "struct",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "strkfarm::components::swap::Route",
    "type": "struct",
    "members": [
      {
        "name": "token_from",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "token_to",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "exchange_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "percent",
        "type": "core::integer::u128"
      },
      {
        "name": "additional_swap_params",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "strkfarm::components::swap::AvnuMultiRouteSwap",
    "type": "struct",
    "members": [
      {
        "name": "token_from_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "token_from_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "token_to_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "token_to_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "token_to_min_amount",
        "type": "core::integer::u256"
      },
      {
        "name": "beneficiary",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "integrator_fee_amount_bps",
        "type": "core::integer::u128"
      },
      {
        "name": "integrator_fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "routes",
        "type": "core::array::Array::<strkfarm::components::swap::Route>"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::ERC4626Strategy::Settings",
    "type": "struct",
    "members": [
      {
        "name": "rewardsContract",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "lendClassHash",
        "type": "core::starknet::class_hash::ClassHash"
      },
      {
        "name": "swapClassHash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::zkLend::IZkLendMarketDispatcher",
    "type": "struct",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::oracle::IPriceOracleDispatcher",
    "type": "struct",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "strkfarm::components::zkLend::zkLendStruct",
    "type": "struct",
    "members": [
      {
        "name": "zkLendRouter",
        "type": "strkfarm::interfaces::zkLend::IZkLendMarketDispatcher"
      },
      {
        "name": "oracle",
        "type": "strkfarm::interfaces::oracle::IPriceOracleDispatcher"
      }
    ]
  },
  {
    "name": "openzeppelin_token::erc20::interface::ERC20ABIDispatcher",
    "type": "struct",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::IZKLendRecovery::TokenAmount",
    "type": "struct",
    "members": [
      {
        "name": "token",
        "type": "openzeppelin_token::erc20::interface::ERC20ABIDispatcher"
      },
      {
        "name": "amount",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "core::array::Span::<strkfarm::interfaces::IZKLendRecovery::TokenAmount>",
    "type": "struct",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<strkfarm::interfaces::IZKLendRecovery::TokenAmount>"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::IZKLendRecovery::Claim",
    "type": "struct",
    "members": [
      {
        "name": "recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "share",
        "type": "core::integer::u128"
      },
      {
        "name": "withdrawable",
        "type": "core::array::Span::<strkfarm::interfaces::IZKLendRecovery::TokenAmount>"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::IZKLendRecovery::ClaimContext",
    "type": "struct",
    "members": [
      {
        "name": "claim",
        "type": "strkfarm::interfaces::IZKLendRecovery::Claim"
      },
      {
        "name": "proof",
        "type": "core::array::Span::<core::felt252>"
      }
    ]
  },
  {
    "name": "strkfarm::interfaces::ERC4626Strategy::IStrategy",
    "type": "interface",
    "items": [
      {
        "name": "harvest",
        "type": "function",
        "inputs": [
          {
            "name": "claim",
            "type": "strkfarm::interfaces::IEkuboDistributor::Claim"
          },
          {
            "name": "proof",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "swapInfo",
            "type": "strkfarm::components::swap::AvnuMultiRouteSwap"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "set_settings",
        "type": "function",
        "inputs": [
          {
            "name": "settings",
            "type": "strkfarm::interfaces::ERC4626Strategy::Settings"
          },
          {
            "name": "lend_settings",
            "type": "strkfarm::components::zkLend::zkLendStruct"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "upgrade",
        "type": "function",
        "inputs": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "get_settings",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "strkfarm::interfaces::ERC4626Strategy::Settings"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "register_zklend",
        "type": "function",
        "inputs": [
          {
            "name": "claim_context",
            "type": "strkfarm::interfaces::IZKLendRecovery::ClaimContext"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "claim_zklend",
        "type": "function",
        "inputs": [
          {
            "name": "batch_id",
            "type": "core::integer::u256"
          },
          {
            "name": "token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "get_zklend_amount",
        "type": "function",
        "inputs": [
          {
            "name": "batch_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "zklend_position",
        "type": "function",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "batch_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "(core::starknet::contract_address::ContractAddress, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "withdraw_zklend",
        "type": "function",
        "inputs": [
          {
            "name": "batch_id",
            "type": "core::integer::u256"
          },
          {
            "name": "receiver",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "MetadataEntrypointsImpl",
    "type": "impl",
    "interface_name": "erc4626::erc4626::interface::IERC4626Metadata"
  },
  {
    "name": "core::byte_array::ByteArray",
    "type": "struct",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "name": "erc4626::erc4626::interface::IERC4626Metadata",
    "type": "interface",
    "items": [
      {
        "name": "name",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "symbol",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "decimals",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u8"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "name": "OwnableTwoStepImpl",
    "type": "impl",
    "interface_name": "openzeppelin_access::ownable::interface::IOwnableTwoStep"
  },
  {
    "name": "openzeppelin_access::ownable::interface::IOwnableTwoStep",
    "type": "interface",
    "items": [
      {
        "name": "owner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "pending_owner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "accept_ownership",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "transfer_ownership",
        "type": "function",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "renounce_ownership",
        "type": "function",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "asset",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "name",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "symbol",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "offset",
        "type": "core::integer::u8"
      },
      {
        "name": "settings",
        "type": "strkfarm::interfaces::ERC4626Strategy::Settings"
      },
      {
        "name": "lend_settings",
        "type": "strkfarm::components::zkLend::zkLendStruct"
      },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "erc4626::erc4626::erc4626::ERC4626Component::Deposit",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "assets",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "shares",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "erc4626::erc4626::erc4626::ERC4626Component::Withdraw",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "receiver",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "assets",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "shares",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "erc4626::erc4626::erc4626::ERC4626Component::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Deposit",
        "type": "erc4626::erc4626::erc4626::ERC4626Component::Deposit"
      },
      {
        "kind": "nested",
        "name": "Withdraw",
        "type": "erc4626::erc4626::erc4626::ERC4626Component::Withdraw"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "from",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "to",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "value",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "spender",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "value",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Transfer",
        "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer"
      },
      {
        "kind": "nested",
        "name": "Approval",
        "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin_introspection::src5::SRC5Component::Event",
    "type": "event",
    "variants": []
  },
  {
    "kind": "struct",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "type": "event",
    "members": [
      {
        "kind": "key",
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "key",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "OwnershipTransferred",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred"
      },
      {
        "kind": "nested",
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Upgraded",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "strkfarm::interfaces::ERC4626Strategy::Harvest",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "asset",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "amount",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "timestamp",
        "type": "core::integer::u64"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "strkfarm::interfaces::ERC4626Strategy::Settings",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "rewardsContract",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "lendClassHash",
        "type": "core::starknet::class_hash::ClassHash"
      },
      {
        "kind": "data",
        "name": "swapClassHash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "strkfarm::strats::harvest_invest::HarvestInvestStrat::Event",
    "type": "event",
    "variants": [
      {
        "kind": "flat",
        "name": "ERC4626Event",
        "type": "erc4626::erc4626::erc4626::ERC4626Component::Event"
      },
      {
        "kind": "flat",
        "name": "ERC20Event",
        "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event"
      },
      {
        "kind": "flat",
        "name": "SRC5Event",
        "type": "openzeppelin_introspection::src5::SRC5Component::Event"
      },
      {
        "kind": "flat",
        "name": "OwnableEvent",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event"
      },
      {
        "kind": "flat",
        "name": "UpgradeableEvent",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event"
      },
      {
        "kind": "nested",
        "name": "Harvest",
        "type": "strkfarm::interfaces::ERC4626Strategy::Harvest"
      },
      {
        "kind": "nested",
        "name": "Settings",
        "type": "strkfarm::interfaces::ERC4626Strategy::Settings"
      }
    ]
  }
]
